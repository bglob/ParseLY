# Generated from PythonProject.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,36,247,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,
        1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,11,
        1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,15,
        1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,
        1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,23,
        1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,3,28,159,8,28,1,28,
        4,28,162,8,28,11,28,12,28,163,1,29,1,29,1,29,1,29,1,30,1,30,1,30,
        1,30,1,30,1,30,1,30,1,30,1,30,3,30,179,8,30,1,31,1,31,4,31,183,8,
        31,11,31,12,31,184,1,32,1,32,1,32,1,32,5,32,191,8,32,10,32,12,32,
        194,9,32,1,32,1,32,1,32,1,32,1,32,5,32,201,8,32,10,32,12,32,204,
        9,32,1,32,3,32,207,8,32,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,
        1,34,4,34,218,8,34,11,34,12,34,219,1,35,1,35,1,35,1,36,1,36,1,36,
        1,36,1,36,1,37,1,37,1,37,5,37,233,8,37,10,37,12,37,236,9,37,1,38,
        4,38,239,8,38,11,38,12,38,240,1,39,4,39,244,8,39,11,39,12,39,245,
        0,0,40,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,
        25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,
        47,24,49,0,51,0,53,0,55,0,57,25,59,26,61,27,63,28,65,29,67,30,69,
        31,71,32,73,33,75,34,77,35,79,36,1,0,6,1,0,97,122,1,0,65,90,1,0,
        48,57,1,0,9,9,1,0,32,32,2,0,10,10,13,13,260,0,1,1,0,0,0,0,3,1,0,
        0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
        0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,
        0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
        0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,
        0,0,45,1,0,0,0,0,47,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
        0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,
        0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,1,81,1,0,0,
        0,3,83,1,0,0,0,5,85,1,0,0,0,7,87,1,0,0,0,9,89,1,0,0,0,11,91,1,0,
        0,0,13,93,1,0,0,0,15,96,1,0,0,0,17,99,1,0,0,0,19,102,1,0,0,0,21,
        105,1,0,0,0,23,107,1,0,0,0,25,113,1,0,0,0,27,117,1,0,0,0,29,120,
        1,0,0,0,31,122,1,0,0,0,33,125,1,0,0,0,35,127,1,0,0,0,37,130,1,0,
        0,0,39,133,1,0,0,0,41,136,1,0,0,0,43,140,1,0,0,0,45,143,1,0,0,0,
        47,145,1,0,0,0,49,149,1,0,0,0,51,151,1,0,0,0,53,153,1,0,0,0,55,155,
        1,0,0,0,57,158,1,0,0,0,59,165,1,0,0,0,61,178,1,0,0,0,63,182,1,0,
        0,0,65,206,1,0,0,0,67,208,1,0,0,0,69,217,1,0,0,0,71,221,1,0,0,0,
        73,224,1,0,0,0,75,229,1,0,0,0,77,238,1,0,0,0,79,243,1,0,0,0,81,82,
        5,43,0,0,82,2,1,0,0,0,83,84,5,45,0,0,84,4,1,0,0,0,85,86,5,42,0,0,
        86,6,1,0,0,0,87,88,5,47,0,0,88,8,1,0,0,0,89,90,5,37,0,0,90,10,1,
        0,0,0,91,92,5,61,0,0,92,12,1,0,0,0,93,94,5,43,0,0,94,95,5,61,0,0,
        95,14,1,0,0,0,96,97,5,45,0,0,97,98,5,61,0,0,98,16,1,0,0,0,99,100,
        5,42,0,0,100,101,5,61,0,0,101,18,1,0,0,0,102,103,5,47,0,0,103,104,
        5,61,0,0,104,20,1,0,0,0,105,106,5,58,0,0,106,22,1,0,0,0,107,108,
        5,119,0,0,108,109,5,104,0,0,109,110,5,105,0,0,110,111,5,108,0,0,
        111,112,5,101,0,0,112,24,1,0,0,0,113,114,5,102,0,0,114,115,5,111,
        0,0,115,116,5,114,0,0,116,26,1,0,0,0,117,118,5,105,0,0,118,119,5,
        110,0,0,119,28,1,0,0,0,120,121,5,60,0,0,121,30,1,0,0,0,122,123,5,
        60,0,0,123,124,5,61,0,0,124,32,1,0,0,0,125,126,5,62,0,0,126,34,1,
        0,0,0,127,128,5,62,0,0,128,129,5,61,0,0,129,36,1,0,0,0,130,131,5,
        61,0,0,131,132,5,61,0,0,132,38,1,0,0,0,133,134,5,33,0,0,134,135,
        5,61,0,0,135,40,1,0,0,0,136,137,5,97,0,0,137,138,5,110,0,0,138,139,
        5,100,0,0,139,42,1,0,0,0,140,141,5,111,0,0,141,142,5,114,0,0,142,
        44,1,0,0,0,143,144,5,35,0,0,144,46,1,0,0,0,145,146,5,34,0,0,146,
        147,5,34,0,0,147,148,5,34,0,0,148,48,1,0,0,0,149,150,7,0,0,0,150,
        50,1,0,0,0,151,152,7,1,0,0,152,52,1,0,0,0,153,154,7,2,0,0,154,54,
        1,0,0,0,155,156,5,45,0,0,156,56,1,0,0,0,157,159,3,55,27,0,158,157,
        1,0,0,0,158,159,1,0,0,0,159,161,1,0,0,0,160,162,3,53,26,0,161,160,
        1,0,0,0,162,163,1,0,0,0,163,161,1,0,0,0,163,164,1,0,0,0,164,58,1,
        0,0,0,165,166,3,57,28,0,166,167,5,46,0,0,167,168,3,57,28,0,168,60,
        1,0,0,0,169,170,5,84,0,0,170,171,5,114,0,0,171,172,5,117,0,0,172,
        179,5,101,0,0,173,174,5,70,0,0,174,175,5,97,0,0,175,176,5,108,0,
        0,176,177,5,115,0,0,177,179,5,101,0,0,178,169,1,0,0,0,178,173,1,
        0,0,0,179,62,1,0,0,0,180,183,3,49,24,0,181,183,3,51,25,0,182,180,
        1,0,0,0,182,181,1,0,0,0,183,184,1,0,0,0,184,182,1,0,0,0,184,185,
        1,0,0,0,185,64,1,0,0,0,186,192,5,34,0,0,187,191,3,63,31,0,188,191,
        3,57,28,0,189,191,3,77,38,0,190,187,1,0,0,0,190,188,1,0,0,0,190,
        189,1,0,0,0,191,194,1,0,0,0,192,190,1,0,0,0,192,193,1,0,0,0,193,
        195,1,0,0,0,194,192,1,0,0,0,195,207,5,34,0,0,196,202,5,39,0,0,197,
        201,3,63,31,0,198,201,3,57,28,0,199,201,3,77,38,0,200,197,1,0,0,
        0,200,198,1,0,0,0,200,199,1,0,0,0,201,204,1,0,0,0,202,200,1,0,0,
        0,202,203,1,0,0,0,203,205,1,0,0,0,204,202,1,0,0,0,205,207,5,39,0,
        0,206,186,1,0,0,0,206,196,1,0,0,0,207,66,1,0,0,0,208,209,5,110,0,
        0,209,210,5,111,0,0,210,211,5,116,0,0,211,68,1,0,0,0,212,218,7,3,
        0,0,213,214,5,32,0,0,214,215,5,32,0,0,215,216,5,32,0,0,216,218,5,
        32,0,0,217,212,1,0,0,0,217,213,1,0,0,0,218,219,1,0,0,0,219,217,1,
        0,0,0,219,220,1,0,0,0,220,70,1,0,0,0,221,222,5,105,0,0,222,223,5,
        102,0,0,223,72,1,0,0,0,224,225,5,101,0,0,225,226,5,108,0,0,226,227,
        5,115,0,0,227,228,5,101,0,0,228,74,1,0,0,0,229,234,3,63,31,0,230,
        233,3,63,31,0,231,233,3,57,28,0,232,230,1,0,0,0,232,231,1,0,0,0,
        233,236,1,0,0,0,234,232,1,0,0,0,234,235,1,0,0,0,235,76,1,0,0,0,236,
        234,1,0,0,0,237,239,7,4,0,0,238,237,1,0,0,0,239,240,1,0,0,0,240,
        238,1,0,0,0,240,241,1,0,0,0,241,78,1,0,0,0,242,244,7,5,0,0,243,242,
        1,0,0,0,244,245,1,0,0,0,245,243,1,0,0,0,245,246,1,0,0,0,246,80,1,
        0,0,0,17,0,158,163,178,182,184,190,192,200,202,206,217,219,232,234,
        240,245,0
    ]

class PythonProjectLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    NUMBER = 25
    DECIMAL = 26
    BOOL = 27
    LETTER = 28
    STRING = 29
    NOT = 30
    TAB = 31
    IF = 32
    ELSE = 33
    VARNAME = 34
    WS = 35
    NEWLINE = 36

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'+'", "'-'", "'*'", "'/'", "'%'", "'='", "'+='", "'-='", "'*='", 
            "'/='", "':'", "'while'", "'for'", "'in'", "'<'", "'<='", "'>'", 
            "'>='", "'=='", "'!='", "'and'", "'or'", "'#'", "'\"\"\"'", 
            "'not'", "'if'", "'else'" ]

    symbolicNames = [ "<INVALID>",
            "NUMBER", "DECIMAL", "BOOL", "LETTER", "STRING", "NOT", "TAB", 
            "IF", "ELSE", "VARNAME", "WS", "NEWLINE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "LOWER", "UPPER", 
                  "DIGIT", "NEGATIVE", "NUMBER", "DECIMAL", "BOOL", "LETTER", 
                  "STRING", "NOT", "TAB", "IF", "ELSE", "VARNAME", "WS", 
                  "NEWLINE" ]

    grammarFileName = "PythonProject.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


