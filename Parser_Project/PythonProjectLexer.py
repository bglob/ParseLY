# Generated from PythonProject.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,17,113,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,
        7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,
        1,13,4,13,73,8,13,11,13,12,13,74,1,14,1,14,1,14,1,14,1,15,1,15,1,
        15,1,15,1,15,1,15,1,15,1,15,1,15,3,15,90,8,15,1,16,1,16,3,16,94,
        8,16,1,17,1,17,1,17,5,17,99,8,17,10,17,12,17,102,9,17,1,18,4,18,
        105,8,18,11,18,12,18,106,1,19,4,19,110,8,19,11,19,12,19,111,0,0,
        20,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,0,23,0,25,0,
        27,11,29,12,31,13,33,14,35,15,37,16,39,17,1,0,5,1,0,97,122,1,0,65,
        90,1,0,48,57,1,0,32,32,2,0,10,10,13,13,116,0,1,1,0,0,0,0,3,1,0,0,
        0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,
        0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,
        0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,
        1,41,1,0,0,0,3,43,1,0,0,0,5,45,1,0,0,0,7,47,1,0,0,0,9,49,1,0,0,0,
        11,51,1,0,0,0,13,53,1,0,0,0,15,56,1,0,0,0,17,59,1,0,0,0,19,62,1,
        0,0,0,21,65,1,0,0,0,23,67,1,0,0,0,25,69,1,0,0,0,27,72,1,0,0,0,29,
        76,1,0,0,0,31,89,1,0,0,0,33,93,1,0,0,0,35,95,1,0,0,0,37,104,1,0,
        0,0,39,109,1,0,0,0,41,42,5,43,0,0,42,2,1,0,0,0,43,44,5,45,0,0,44,
        4,1,0,0,0,45,46,5,42,0,0,46,6,1,0,0,0,47,48,5,47,0,0,48,8,1,0,0,
        0,49,50,5,37,0,0,50,10,1,0,0,0,51,52,5,61,0,0,52,12,1,0,0,0,53,54,
        5,43,0,0,54,55,5,61,0,0,55,14,1,0,0,0,56,57,5,45,0,0,57,58,5,61,
        0,0,58,16,1,0,0,0,59,60,5,42,0,0,60,61,5,61,0,0,61,18,1,0,0,0,62,
        63,5,47,0,0,63,64,5,61,0,0,64,20,1,0,0,0,65,66,7,0,0,0,66,22,1,0,
        0,0,67,68,7,1,0,0,68,24,1,0,0,0,69,70,7,2,0,0,70,26,1,0,0,0,71,73,
        3,25,12,0,72,71,1,0,0,0,73,74,1,0,0,0,74,72,1,0,0,0,74,75,1,0,0,
        0,75,28,1,0,0,0,76,77,3,27,13,0,77,78,5,46,0,0,78,79,3,27,13,0,79,
        30,1,0,0,0,80,81,5,84,0,0,81,82,5,114,0,0,82,83,5,117,0,0,83,90,
        5,101,0,0,84,85,5,70,0,0,85,86,5,97,0,0,86,87,5,108,0,0,87,88,5,
        115,0,0,88,90,5,101,0,0,89,80,1,0,0,0,89,84,1,0,0,0,90,32,1,0,0,
        0,91,94,3,21,10,0,92,94,3,23,11,0,93,91,1,0,0,0,93,92,1,0,0,0,94,
        34,1,0,0,0,95,100,3,33,16,0,96,99,3,33,16,0,97,99,3,27,13,0,98,96,
        1,0,0,0,98,97,1,0,0,0,99,102,1,0,0,0,100,98,1,0,0,0,100,101,1,0,
        0,0,101,36,1,0,0,0,102,100,1,0,0,0,103,105,7,3,0,0,104,103,1,0,0,
        0,105,106,1,0,0,0,106,104,1,0,0,0,106,107,1,0,0,0,107,38,1,0,0,0,
        108,110,7,4,0,0,109,108,1,0,0,0,110,111,1,0,0,0,111,109,1,0,0,0,
        111,112,1,0,0,0,112,40,1,0,0,0,8,0,74,89,93,98,100,106,111,0
    ]

class PythonProjectLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    NUMBER = 11
    DECIMAL = 12
    BOOL = 13
    LETTER = 14
    VARNAME = 15
    WS = 16
    NEWLINE = 17

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'+'", "'-'", "'*'", "'/'", "'%'", "'='", "'+='", "'-='", "'*='", 
            "'/='" ]

    symbolicNames = [ "<INVALID>",
            "NUMBER", "DECIMAL", "BOOL", "LETTER", "VARNAME", "WS", "NEWLINE" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "LOWER", "UPPER", "DIGIT", "NUMBER", 
                  "DECIMAL", "BOOL", "LETTER", "VARNAME", "WS", "NEWLINE" ]

    grammarFileName = "PythonProject.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


